/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <../boards/shields/kyria/boards/nice_nano.overlay>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>


#define DEFAULT 0
#define SWAP 1
#define NUMPAD 2
#define SYMBOLS 3
#define GAME 4
//#define MOUSE 4
#define MEDIA 5
#define RGB 6
#define BLUETOOTH 7

&left_encoder {
	resolution = <2>;
};

&right_encoder {
	resolution = <4>;
};

&mt {
	flavor = "tap-preferred";
};

&lt {
	flavor = "tap-preferred";
};

/ {
	behaviors {
		mtp: mod_tap_permissive {
			compatible = "zmk,behavior-hold-tap";
			label = "MOD_TAP_PERMISSIVE";
			#binding-cells = <2>;
			flavor = "balanced";
			tapping-term-ms = <200>;
			quick-tap-ms = <0>;
			bindings = <&kp>, <&kp>;
		};
		mto: mod_tap_other_hold {
			compatible = "zmk,behavior-hold-tap";
			label = "MOD_TAP_OTHER_HOLD";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <0>;
			bindings = <&kp>, <&kp>;
		};
	};

	keymap {
		compatible = "zmk,keymap";

		default_layer {
			bindings = <
	&kp ESC			&kp Q		&kp W		&kp E		&lt RGB R		&kp T                                         									&kp Y 				&kp U		&kp I		&kp O		&kp P		&kp BSPC
	&mto LCTRL TAB	&kp A       &kp S       &kp D       &kp F 			&kp G                                               							&kp H 				&kp J		&kp K		&kp L		&kp SEMI 	&kp SQT
	&kp LSHFT 		&kp Z 		&kp X       &kp C       &kp V       	&kp B 			&kp LCTRL	&kp SPACE   		&kp RET 		&to GAME		&kp N 				&kp M		&kp COMMA 	&kp DOT 	&kp FSLH 	&kp DEL
	                						&kp C_MUTE  &kp LALT    	&mo NUMPAD  	&mo SWAP 	&kp SPACE     		&kp RET			&mo SYMBOLS 	&kp LGUI 			&mo NUMPAD 	&kp C_PP 
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_VOL_DN C_VOL_UP>;
		};
		
		swap_layer {
			bindings = <
	&kp BSPC		&kp N1		&kp N2		&kp N3		&kp N4		&kp N5                                        										&kp N6			&kp N7			&kp N8		&kp N9		&kp N0		&kp ESC
	&kp TAB 	    &none  	    &none 		&none 		&none 		&none                                            									&none 			&kp UP  		&none     	&none   	&none 		&mto LCTRL TAB
	&kp RSHFT 		&none 	    &none		&none       &none 		&none		    &none		    &none				&caps_word		&none			&kp LEFT 	    &kp DOWN  		&kp RIGHT 	&none 	    &none 	    &kp LSHFT
	                     					&mo C_MUTE 	&kp LALT 	&mo SYMBOLS 	&kp SPACE 		&trans         		&trans 			&kp RET			&mo NUMPAD		&kp C_PREV 		&kp C_MUTE
			>;

			sensor-bindings = <&inc_dec_kp LEFT RIGHT &inc_dec_kp LEFT RIGHT>;
		};

		numpad_layer {

			bindings = <
	&kp F1		&kp F2			&kp F3			&kp F4		&kp F5		&kp F6                                  							&kp N7			&kp N8		&kp N9 		&kp KP_MULTIPLY		&kp F7 		&kp F8
	&kp INSERT	&kp PG_DN		&kp LEFT 		&kp DOWN 	&kp RIGHT 	&kp LBKT                                  							&kp N4 			&kp N5  	&kp N6 		&kp KP_MINUS		&kp F9 		&kp F10
	&trans     	&trans 			&trans 			&trans 		&trans 		&kp LPAR		&trans		&trans   		&trans		&trans 		&kp N1 			&kp N2  	&kp N3 		&kp KP_PLUS 		&kp F11  	&kp F12
	                         					&trans 			&trans 	&trans 			&trans 		&trans         	&trans 		&trans 		&kp N0 			&trans 		&trans
			>;
		};

		symbol_layer {

			bindings = <
	&kp ESC		&kp EXCL		&kp AT		&kp HASH		&kp DOLLAR		&kp PRCNT                                 							 &kp CARET		&kp AMPS    &kp STAR		&kp LPAR		&kp RPAR		&kp BSPC
	&trans		&trans			&trans		&kp F 			&trans 			&kp P                      										 &kp KP_MINUS 		&kp EQUAL  	&kp RBKT     	&kp LBRC   		&kp RBRC 		&kp PIPE
	&trans    	&trans 			&trans 		&trans 			&trans 			&kp P 		&trans 		&trans   			&trans		&trans		 &kp UNDER 	&kp KP_PLUS &kp BSLH 		&kp LBKT 		&kp RBKT 		&kp TILDE
	                          				&trans 			&trans 			&trans 		&trans 		&trans   			&trans 		&trans		 &trans		 	&trans		&trans
			>;

		};

		game_layer {

			bindings = <
	&kp ESC			&kp N1		&kp N2		&kp N3		&kp N4		&kp N5                                        										&kp N6			&kp N7			&kp N8		&kp N9		&kp N0		&kp ESC
	&kp LSHFT 	    &kp A  		&kp W		&kp E		&kp R 		&kp F                                            									&none 			&kp UP  		&none     	&none   	&none 		&kp TAB
	&kp LCTRL 		&kp Z  	    &kp S		&kp D       &kp C 		&kp V		    &none		    &none				&caps_word		&to DEFAULT		&kp LEFT 	    &kp DOWN  		&kp RIGHT 	&none 	    &none 	    &kp LALT
	                     					&mo C_MUTE 	&kp LALT 	&mo SYMBOLS 	&kp SPACE 		&kp SPACE         	&trans 			&kp RET			&mo NUMPAD		&kp C_PREV 		&kp C_MUTE
			>;

		};

		media_layer {

			bindings = <
	&trans &trans &trans &trans &trans &trans                                &trans &trans &trans &trans &trans &trans
	&trans &trans &trans &trans &trans &trans                                &kp C_PREV &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT &trans &trans
	&trans &trans &trans &trans &trans &trans &trans &trans    &trans &trans &trans     &trans &trans &trans &trans &trans
	                     &trans &trans &trans &trans &trans    &trans &kp C_PP &kp C_MUTE &trans &trans
			>;

		};

		rgb_layer {
			bindings = <
	&trans &trans &trans &trans &trans &trans                                &rgb_ug RGB_ON &rgb_ug RGB_OFF &trans &trans &trans &trans
	&trans &trans &trans &trans &trans &trans                                &rgb_ug RGB_TOG &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_BRI &rgb_ug RGB_SPI &rgb_ug RGB_EFF
	&trans &trans &trans &trans &trans &trans &trans &trans    &trans &trans &trans          &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_BRD &rgb_ug RGB_SPD &rgb_ug RGB_EFR
	                     &trans &trans &trans &trans &trans    &trans &trans &trans &trans &trans
			>;

		};

		bluetooth_layer {

			bindings = <
	&bt BT_NXT &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                    &trans &trans &trans &trans &trans &trans
	&bt BT_PRV &trans &trans &trans &trans &trans                                                  &trans &trans &trans &trans &trans &trans
	&trans     &trans &trans &out OUT_BLE &out OUT_USB &out OUT_TOG &trans &trans    &trans &trans &trans &trans &trans &trans &trans &trans
	                         &bt BT_CLR &trans &trans &trans &trans                  &trans &trans &trans &trans &trans
			>;

		};

	};
};
